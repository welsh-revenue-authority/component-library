name: Build, upload to NPM
on:
  push:
    branches: ["main"]
    paths:
      - "package.json"
jobs:
  check_versions:
    name: "Check package.json version numbers"
    runs-on: ubuntu-latest
    outputs:
      old_version_num: ${{ steps.get_versions.outputs.OLD_VERSION_NUM }}
      new_version_num: ${{ steps.get_versions.outputs.NEW_VERSION_NUM }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "2"
      - shell: bash
        name: "Get version numbers"
        id: get_versions
        run: |
          echo "{OLD_VERSION_NUM}=$( git show HEAD~1:package.json | jq '.version' )" >> "$GITHUB_OUTPUT"
          echo "{NEW_VERSION_NUM}=$( cat package.json | jq '.version' )" >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs: check_versions
    if: ${{ needs.check_versions.outputs.old_version_num  != needs.check_versions.outputs.old_version_num }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
      - run: npm ci
      - run: npm run build
      # First time package is scoped to private, explicitly set to public
      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
